/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bacon.gui;

import com.bacon.domain.Category;
import com.bacon.Aplication;
import com.bacon.Configuration;
import com.bacon.domain.Product;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import org.dz.PanelCapturaMod;

/**
 *
 * @author lrod
 */
public class PanelModPedidos extends PanelCapturaMod
        implements ActionListener {

    private final Aplication app;
    private JPanel pnCont;
    private Box panelLeft;
    private Box panelTop;
    private PanelPedido pnPedido;
    private ArrayList<Category> categorys;
    private ArrayList<Product> productsList;
    private PanelTopSearch panelTopSearch;
    private PanelCategory panelCategory;
    private PanelSelCategory panelSelCategory;

    /**
     * Creates new form PanelPedidos
     *
     * @param app
     */
    public PanelModPedidos(Aplication app) {
        this.app = app;
        initComponents();
        createComponents();
    }

    private void createComponents() {

        categorys = new ArrayList<>();
        categorys.add(new Category("Productos"));
        pnCont = new JPanel(new BorderLayout());

        panelTop = new Box(BoxLayout.Y_AXIS);

        panelTopSearch = new PanelTopSearch(app);
        panelTopSearch.addPropertyChangeListener(this);

        panelTop.add(panelTopSearch);

        panelSelCategory = app.getGuiManager().getPanelSelCategory();
        panelSelCategory.addPropertyChangeListener(this);

        categorys = app.getControl().getCategoriesList();
        int MAX = app.getConfiguration().getProperty(Configuration.MAX_CATEGORIES_LIST, 5);
        if(categorys.size()<MAX){
            categorys = app.getControl().getAllCategoriesList();
        }
        categorys.add(0, new Category("TODO"));
        
        
        

        panelSelCategory.setCategories(categorys);

        panelTop.add(panelSelCategory);

        pnCont.add(panelTop, BorderLayout.NORTH);

        panelLeft = new Box(BoxLayout.Y_AXIS);
        JScrollPane scp = new JScrollPane(panelLeft);
        pnCont.add(scp, BorderLayout.CENTER);
        splitPane.setLeftComponent(pnCont);

        pnPedido = app.getGuiManager().getPanelPedido();

        splitPane.setRightComponent(pnPedido);

        loadAllProducts();

        panelCategory = new PanelCategory(categorys.get(0), productsList, app);
        panelCategory.addPropertyChangeListener(pnPedido);
        panelTopSearch.addPropertyChangeListener(panelCategory);

        panelLeft.add(panelCategory);
    }

    private void loadAllProducts() {
        productsList = app.getControl().getProductsList("enabled=1", "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();

        setLayout(new java.awt.BorderLayout());
        add(splitPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    @Override

    public void actionPerformed(ActionEvent e) {
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (PanelTopSearch.AC_FILTER_PRODUCTS.equals(evt.getPropertyName())) {
            ArrayList<Product> productsList = (ArrayList<Product>) evt.getNewValue();

            if (productsList == null) {
//                panelLeft.removeAll();
                productsList = this.productsList;
                panelCategory.setProducts(productsList);
//                loadAllProducts();
            } else {
//                panelLeft.removeAll();
                panelCategory.setProducts(productsList);
                panelLeft.updateUI();
            }
            this.updateUI();
        } else if (evt.getPropertyName().startsWith(PanelSelCategory.SEL_CAT_)) {
            String cat = evt.getPropertyName().substring(8).toLowerCase();
            ArrayList<Product> productsList = this.productsList;
            if (!"TODO".equalsIgnoreCase(cat)) {
                productsList = app.getControl().getProductsList("category='" + cat + "' AND enabled=1", "");
            }
            panelCategory.setProducts(productsList);
            panelLeft.updateUI();
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables
}
