/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bacon.gui;

import com.bacon.domain.Category;
import com.bacon.Aplication;
import com.bacon.domain.Product;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import org.dz.PanelCapturaMod;

/**
 *
 * @author lrod
 */
public class PanelModPedidos extends PanelCapturaMod
        implements ActionListener {

    private final Aplication app;
    private JPanel pnCont;
    private Box panelLeft;
    private PanelPedido pnPedido;
    private ArrayList<Category> categorys;
    private ArrayList<Product> productsList;

    /**
     * Creates new form PanelPedidos
     *
     * @param app
     */
    public PanelModPedidos(Aplication app) {
        this.app = app;
        initComponents();
        createComponents();
    }

    private void createComponents() {

        productsList = app.getControl().getProductsList("");

        String stImg = "gui/img/tradicional.png";

//        Product p1 = new Product(1,"Tradicional de carne", 12000, stImg);
//        p1.setDescription("160 gr de carne, queso americano"
//                + "lechuga rizada, tomate, tocineta cronch y salsas.");
//        Product p2 = new Product(2,"Chicken Burger", 12000, stImg);
//        p2.setDescription("140 gr de pechuga de pollo, queso Mozzarela,"
//                + "lechuga rizada, tomate, tocineta cronch y salsas");
//        Product p3 = new Product(3,"RIB 57", 18000, stImg);
//        p3.setDescription("160 gr de carne, trocitos crocante piel de cerdo"
//                + "costilla desmenuzada en salsa BBQ,  queso americano,"
//                + "una costilla ahumada en salsa BBQ, "
//                + "tocineta cronch, lechuga rizada, tomate y salsas.");
//        Product p4 = new Product(4,"Doble carne", 17000, stImg);
//        p4.setDescription("Dos porciones de 160 gr de carne, doble queso,"
//                + "cebollas caramelizadas, tocineta cronch, "
//                + "lechuga rizada, tomate y salsas.");
//        Product p5 = new Product(5,"Bacon 57", 14000, stImg);
//        p5.setDescription("160 gr de carne, queso americano,"
//                + "cebollas grill√© con tocineta, jamon, tocineta cronch,"
//                + "lechuga rizada, tomate y salsas.");
////        Product p6 = new Product("Rellenita", 20000, stImg);
//        ArrayList<Product> products = new ArrayList<>();
//        products.add(p1);
//        products.add(p2);
//        products.add(p3);
//        products.add(p4);
//        products.add(p5);
//        products.add(p6);
        for (int i = 0; i < productsList.size(); i++) {
            Product get = productsList.get(i);

        }

        categorys = new ArrayList<>();
        categorys.add(new Category("Productos"));
//        categorys.add(new Category("Extras"));
        
//        categorys.add(new Category("Perros"));
//        categorys.add(new Category("Otros"));
        pnCont = new JPanel(new BorderLayout());
//        Box box = new Box(BoxLayout.LINE_AXIS);
//        Registro regSearch = new Registro(BoxLayout.X_AXIS, "Buscar", "", 100);
//        box.add(regSearch);
//        box.add(Box.createHorizontalGlue());
//        box.add(Box.createHorizontalStrut(300));
        PanelTopSearch panelTopSearch = new PanelTopSearch(app);
        panelTopSearch.addPropertyChangeListener(this);
        pnCont.add(panelTopSearch, BorderLayout.NORTH);

        panelLeft = new Box(BoxLayout.Y_AXIS);
        JScrollPane scp = new JScrollPane(panelLeft);
        pnCont.add(scp, BorderLayout.CENTER);
        splitPane.setLeftComponent(pnCont);

        pnPedido = app.getGuiManager().getPanelPedido();

        splitPane.setRightComponent(pnPedido);

        loadAllProducts();

    }

    private void loadAllProducts() {
        for (int i = 0; i < categorys.size(); i++) {
            Category cat = categorys.get(i);
            PanelCategory panelCategory = new PanelCategory(cat, productsList, app);
            panelCategory.addPropertyChangeListener(pnPedido);
            panelLeft.add(panelCategory);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();

        setLayout(new java.awt.BorderLayout());
        add(splitPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    @Override

    public void actionPerformed(ActionEvent e) {
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        System.out.println("evt:" + evt.getPropertyName());
        if (PanelTopSearch.AC_FILTER_PRODUCTS.equals(evt.getPropertyName())) {
            ArrayList<Product> productsList = (ArrayList<Product>) evt.getNewValue();

            if (productsList == null) {
                panelLeft.removeAll();
                loadAllProducts();
            } else {
                panelLeft.removeAll();
                PanelCategory panelCategory = new PanelCategory(new Category("Productos"), productsList, app);
                panelCategory.addPropertyChangeListener(pnPedido);
                panelLeft.add(panelCategory);
                panelLeft.updateUI();
            }
            this.updateUI();
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables
}
